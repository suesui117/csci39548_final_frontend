{"ast":null,"code":"var _jsxFileName = \"/Users/sue/Desktop/csci395_web/csci39548_final_frontend/src/components/views/EmployeeView.js\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmployeeView = props => {\n  const {\n    employee,\n    editTask,\n    allTasks\n  } = props;\n  let assignedTasks = allTasks.filter(task => task.employeeId === employee.id);\n  let availableTasks = allTasks.filter(task => task.employeeId !== employee.id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: employee.firstname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: employee.department\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-evenly\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Assigned tasks:\", assignedTasks.map(task => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/task/${task.id}`,\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: task.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => editTask({\n                id: task.id,\n                employeeId: null\n              }),\n              children: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 13\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Available tasks:\", availableTasks.map(task => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/task/${task.id}`,\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: task.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => editTask({\n                id: task.id,\n                employeeId: employee.id\n              }),\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 13\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c = EmployeeView;\nexport default EmployeeView;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeView\");","map":{"version":3,"names":["Link","EmployeeView","props","employee","editTask","allTasks","assignedTasks","filter","task","employeeId","id","availableTasks","firstname","department","display","flexDirection","justifyContent","map","description"],"sources":["/Users/sue/Desktop/csci395_web/csci39548_final_frontend/src/components/views/EmployeeView.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\n\n\nconst EmployeeView = (props) => {\n  const {employee, editTask, allTasks} = props;\n  let assignedTasks = allTasks.filter(task => task.employeeId===employee.id);\n  let availableTasks = allTasks.filter(task => task.employeeId!==employee.id);\n  \n  return (\n    <div>      \n      <h1>{employee.firstname}</h1>\n      <h3>{employee.department}</h3>\n      <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-evenly\"}}>\n        <div>Assigned tasks:\n        {assignedTasks.map( task => {\n          return (\n            <div key={task.id}>\n            <Link to={`/task/${task.id}`}>\n              <h4>{task.description}</h4>\n            </Link>\n            <button onClick={() => editTask({id:task.id, employeeId: null})}>x</button>\n            </div>\n          );\n        })}</div>\n        \n        \n        <div>Available tasks:\n        {availableTasks.map( task => {\n          return (\n            <div key={task.id}>\n            <Link to={`/task/${task.id}`}>\n              <h4>{task.description}</h4>\n            </Link>\n            <button onClick={() => editTask({id:task.id, employeeId: employee.id})}>+</button>\n            </div>\n          );\n        })}</div>\n\n      </div>\n\n  \n    </div>\n  );\n\n};\n\nexport default EmployeeView;"],"mappings":";AAAA,SAASA,IAAT,QAAqB,kBAArB;;;AAGA,MAAMC,YAAY,GAAIC,KAAD,IAAW;EAC9B,MAAM;IAACC,QAAD;IAAWC,QAAX;IAAqBC;EAArB,IAAiCH,KAAvC;EACA,IAAII,aAAa,GAAGD,QAAQ,CAACE,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACC,UAAL,KAAkBN,QAAQ,CAACO,EAAnD,CAApB;EACA,IAAIC,cAAc,GAAGN,QAAQ,CAACE,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACC,UAAL,KAAkBN,QAAQ,CAACO,EAAnD,CAArB;EAEA,oBACE;IAAA,wBACE;MAAA,UAAKP,QAAQ,CAACS;IAAd;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UAAKT,QAAQ,CAACU;IAAd;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAK,KAAK,EAAE;QAACC,OAAO,EAAE,MAAV;QAAkBC,aAAa,EAAE,KAAjC;QAAwCC,cAAc,EAAE;MAAxD,CAAZ;MAAA,wBACE;QAAA,8BACCV,aAAa,CAACW,GAAd,CAAmBT,IAAI,IAAI;UAC1B,oBACE;YAAA,wBACA,QAAC,IAAD;cAAM,EAAE,EAAG,SAAQA,IAAI,CAACE,EAAG,EAA3B;cAAA,uBACE;gBAAA,UAAKF,IAAI,CAACU;cAAV;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA,QADA,eAIA;cAAQ,OAAO,EAAE,MAAMd,QAAQ,CAAC;gBAACM,EAAE,EAACF,IAAI,CAACE,EAAT;gBAAaD,UAAU,EAAE;cAAzB,CAAD,CAA/B;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAJA;UAAA,GAAUD,IAAI,CAACE,EAAf;YAAA;YAAA;YAAA;UAAA,QADF;QAQD,CATA,CADD;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAcE;QAAA,+BACCC,cAAc,CAACM,GAAf,CAAoBT,IAAI,IAAI;UAC3B,oBACE;YAAA,wBACA,QAAC,IAAD;cAAM,EAAE,EAAG,SAAQA,IAAI,CAACE,EAAG,EAA3B;cAAA,uBACE;gBAAA,UAAKF,IAAI,CAACU;cAAV;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA,QADA,eAIA;cAAQ,OAAO,EAAE,MAAMd,QAAQ,CAAC;gBAACM,EAAE,EAACF,IAAI,CAACE,EAAT;gBAAaD,UAAU,EAAEN,QAAQ,CAACO;cAAlC,CAAD,CAA/B;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAJA;UAAA,GAAUF,IAAI,CAACE,EAAf;YAAA;YAAA;YAAA;UAAA,QADF;QAQD,CATA,CADD;MAAA;QAAA;QAAA;QAAA;MAAA,QAdF;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoCD,CAzCD;;KAAMT,Y;AA2CN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}