{"ast":null,"code":"var _jsxFileName = \"/Users/sue/Desktop/csci395_web/csci39548_final_frontend/src/components/containers/EmployeeContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchEmployeeThunk, fetchAllTasksThunk, editTaskThunk } from \"../../store/thunks\";\nimport { EmployeeView } from \"../views\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass EmployeeContainer extends Component {\n  componentDidMount() {\n    //getting employee ID from url\n    this.props.fetchEmployee(this.props.match.params.id);\n    this.props.fetchTasks();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(EmployeeView, {\n      employee: this.props.employee,\n      editTask: this.props.editTask,\n      allTasks: this.props.allTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// map state to props\nconst mapState = state => {\n  return {\n    employee: state.employee,\n    allTasks: state.allTasks\n  };\n};\n\n// map dispatch to props\nconst mapDispatch = dispatch => {\n  return {\n    fetchEmployee: id => dispatch(fetchEmployeeThunk(id)),\n    editTask: task => dispatch(editTaskThunk(task)),\n    fetchTasks: () => dispatch(fetchAllTasksThunk())\n  };\n};\nexport default connect(mapState, mapDispatch)(EmployeeContainer);","map":{"version":3,"names":["React","Component","connect","fetchEmployeeThunk","fetchAllTasksThunk","editTaskThunk","EmployeeView","jsxDEV","_jsxDEV","EmployeeContainer","componentDidMount","props","fetchEmployee","match","params","id","fetchTasks","render","employee","editTask","allTasks","fileName","_jsxFileName","lineNumber","columnNumber","mapState","state","mapDispatch","dispatch","task"],"sources":["/Users/sue/Desktop/csci395_web/csci39548_final_frontend/src/components/containers/EmployeeContainer.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { \n  fetchEmployeeThunk,\n  fetchAllTasksThunk,\n  editTaskThunk,\n} from \"../../store/thunks\";\n\nimport { EmployeeView } from \"../views\";\n\nclass EmployeeContainer extends Component {\n  componentDidMount() {\n    //getting employee ID from url\n    this.props.fetchEmployee(this.props.match.params.id);\n    this.props.fetchTasks();\n  }\n\n  render() {\n    return (\n      <EmployeeView \n        employee={this.props.employee}\n        editTask={this.props.editTask}\n        allTasks={this.props.allTasks}\n      />\n    );\n  }\n}\n\n// map state to props\nconst mapState = (state) => {\n  return {\n    employee: state.employee,\n    allTasks: state.allTasks,\n\n  };\n};\n\n// map dispatch to props\nconst mapDispatch = (dispatch) => {\n  return {\n    fetchEmployee: (id) => dispatch(fetchEmployeeThunk(id)),\n    editTask: (task) => dispatch(editTaskThunk(task)),\n    fetchTasks: () => dispatch(fetchAllTasksThunk()),\n\n  };\n};\n\nexport default connect(mapState, mapDispatch)(EmployeeContainer);"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,aAAa;AACrC,SACEC,kBAAkB,EAClBC,kBAAkB,EAClBC,aAAa,QACR,oBAAoB;AAE3B,SAASC,YAAY,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,iBAAiB,SAASR,SAAS,CAAC;EACxCS,iBAAiBA,CAAA,EAAG;IAClB;IACA,IAAI,CAACC,KAAK,CAACC,aAAa,CAAC,IAAI,CAACD,KAAK,CAACE,KAAK,CAACC,MAAM,CAACC,EAAE,CAAC;IACpD,IAAI,CAACJ,KAAK,CAACK,UAAU,CAAC,CAAC;EACzB;EAEAC,MAAMA,CAAA,EAAG;IACP,oBACET,OAAA,CAACF,YAAY;MACXY,QAAQ,EAAE,IAAI,CAACP,KAAK,CAACO,QAAS;MAC9BC,QAAQ,EAAE,IAAI,CAACR,KAAK,CAACQ,QAAS;MAC9BC,QAAQ,EAAE,IAAI,CAACT,KAAK,CAACS;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAEN;AACF;;AAEA;AACA,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAC1B,OAAO;IACLR,QAAQ,EAAEQ,KAAK,CAACR,QAAQ;IACxBE,QAAQ,EAAEM,KAAK,CAACN;EAElB,CAAC;AACH,CAAC;;AAED;AACA,MAAMO,WAAW,GAAIC,QAAQ,IAAK;EAChC,OAAO;IACLhB,aAAa,EAAGG,EAAE,IAAKa,QAAQ,CAACzB,kBAAkB,CAACY,EAAE,CAAC,CAAC;IACvDI,QAAQ,EAAGU,IAAI,IAAKD,QAAQ,CAACvB,aAAa,CAACwB,IAAI,CAAC,CAAC;IACjDb,UAAU,EAAEA,CAAA,KAAMY,QAAQ,CAACxB,kBAAkB,CAAC,CAAC;EAEjD,CAAC;AACH,CAAC;AAED,eAAeF,OAAO,CAACuB,QAAQ,EAAEE,WAAW,CAAC,CAAClB,iBAAiB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}